# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /init                       controllers.Application.initialize()

GET     /:event/register            controllers.Registration.registration(event)
POST    /:event/register            controllers.Registration.doRegistration(event)
GET     /:event/registered/:uuid    controllers.Registration.waitForEmail(event, uuid, passwordRecovery:Boolean=false)
GET     /:event/recovered/:uuid     controllers.Registration.waitForEmail(event, uuid, passwordRecovery:Boolean=true)
GET     /:event/confirm/:uuid       controllers.Registration.confirmRegistration(event, uuid, passwordRecovery:Boolean=false)
GET     /:event/recover/:uuid       controllers.Registration.confirmRegistration(event, uuid, passwordRecovery:Boolean=true)
GET     /:event/login               controllers.Registration.login(event)
POST    /:event/login               controllers.Registration.doLogin(event)
GET     /:event/remind              controllers.Registration.passwordRemind(event)
POST    /:event/remind              controllers.Registration.doPasswordRemind(event)
GET     /:event/logout              controllers.Registration.logout(event)

#user info
GET     /:event/user_info           controllers.UserInfo.info(event)
POST    /:event/user_info           controllers.UserInfo.doChangeInfo(event)
GET     /:event/contests            controllers.UserInfo.contestsList(event)

#contest
GET     /:event/:contest/start      controllers.Contests.startContest(event, contest)
GET     /:event/:contest/go         controllers.Contests.contest(event, contest)
POST    /:event/:contest/submit     controllers.Contests.submit(event, contest)
POST    /:event/:contest/stop       controllers.Contests.stop(event, contest)
POST    /:event/:contest/restart    controllers.Contests.restart(event, contest)

#admin
GET     /:event/admin               controllers.EventAdministration.admin(event)
GET     /:event/registeredUsers     controllers.EventAdministration.getUsers(event, appendResults:Boolean = false)
GET     /:event/usersWithResults    controllers.EventAdministration.getUsers(event, appendResults:Boolean = true)
GET     /:event/usersAnswers        controllers.EventAdministration.getUsersAnswers(event)
GET     /:event/usersActivity       controllers.EventAdministration.getUsersActivity(event)
GET     /:event/:user/add_admin     controllers.EventAdministration.modifyAdmin(event, user, remove:Boolean = false)
GET     /:event/:user/remove_admin  controllers.EventAdministration.modifyAdmin(event, user, remove:Boolean = true)

#trash
POST    /:event/upload_kenguru_codes    controllers.EventAdministration.uploadKenguruSchoolCodes(event)

#debug
#TODO: 1) create controller intention, 2) TODO highlight. 3) Create method intention shows up even if there is no controller 4) autoimport play.mvc.Result
#TODO report. comment in the normal line is not highlighted as an error, but it does not work
GET     /:action/debug              controllers.Debug.debug(action)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)