# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page

GET         /                                                    controllers.Application.root()

#registration
GET         /:event/register                                     controllers.Registration.registration(event)
GET         /:event/register_by_user                             controllers.Registration.registrationByUser(event)
GET         /:event/:role/register                               controllers.Registration.roleRegistration(event, role)
GET         /:event/:role/register_by_user                       controllers.Registration.roleRegistrationByUser(event, role)
POST        /:event/:role/register                               controllers.Registration.doRegistration(event, role)
POST        /:event/:role/register_by_user                       controllers.Registration.doRegistrationByUser(event, role)

#other user actions
GET         /:event/registered/:uuid                             controllers.Registration.waitForEmail(event, uuid, passwordRecovery:Boolean=false)
GET         /:event/recovered/:uuid                              controllers.Registration.waitForEmail(event, uuid, passwordRecovery:Boolean=true)
GET         /:event/confirm/:uuid                                controllers.Registration.confirmRegistration(event, uuid, passwordRecovery:Boolean=false)
GET         /:event/recover/:uuid                                controllers.Registration.confirmRegistration(event, uuid, passwordRecovery:Boolean=true)
GET         /:event/login                                        controllers.Registration.login(event)
POST        /:event/login                                        controllers.Registration.doLogin(event)
GET         /:event/remind                                       controllers.Registration.passwordRemind(event)
POST        /:event/remind                                       controllers.Registration.doPasswordRemind(event)
GET         /:event/logout                                       controllers.Registration.logout(event)
GET         /:event/enter                                        controllers.Application.enter(event)

#user info
GET         /:event/user_info                                    controllers.UserInfo.info(event)
POST        /:event/user_info                                    controllers.UserInfo.doChangeInfo(event)
GET         /:event/contests                                     controllers.UserInfo.contestsList(event)

#contest
GET         /:event/:contest/start                               controllers.Contests.startContest(event, contest)
GET         /:event/:contest/go                                  controllers.Contests.contest(event, contest)
POST        /:event/:contest/submit                              controllers.Contests.submit(event, contest)
POST        /:event/:contest/stop                                controllers.Contests.stop(event, contest)
POST        /:event/:contest/restart                             controllers.Contests.restart(event, contest)

#admin event
GET         /:event/admin                                        controllers.EventAdministration.admin(event)
POST        /:event/admin                                        controllers.EventAdministration.doChangeEvent(event)
GET         /:event/:table/csv_table                             controllers.EventAdministration.csvTable(event, table:Integer)
GET         /:event/:contest/:table/csv_table                    controllers.EventAdministration.csvTableForContest(event, contest, table:Integer)
POST        /:event/add_contest                                  controllers.EventAdministration.addContest(event)
POST        /:event/invalidate_event_results                     controllers.EventAdministration.doInvalidateEventResults(event)
POST        /:event/invalidate_contests_and_event_results        controllers.EventAdministration.doInvalidateContestsAndEventResults(event)
#html block
POST        /~global/:block/set_html_block                       controllers.Application.setGlobalHtmlBlock(block)
POST        /:event/:block/set_html_block                        controllers.EventAdministration.setHtmlBlock(event, block)

#admin contest
GET         /:event/:contest/contest_admin                       controllers.ContestAdministration.contestAdmin(event, contest)
POST        /:event/:contest/invalidate_contest_results          controllers.ContestAdministration.doInvalidateContestsAndEventResults(event, contest)
POST        /:event/:contest/contest_up                          controllers.ContestAdministration.moveContestUp(event, contest)
POST        /:event/:contest/contest_down                        controllers.ContestAdministration.moveContestDown(event, contest)
POST        /:event/:contest/contest_remove                      controllers.ContestAdministration.removeContest(event, contest)
POST        /:event/:contest/update                              controllers.ContestAdministration.doUpdateContest(event, contest)
POST        /:event/:contest/add_block                           controllers.ContestAdministration.doAddBlock(event, contest)
POST        /:event/:contest/:index/move_block_up                controllers.ContestAdministration.moveBlockUp(event, contest, index:Integer)
POST        /:event/:contest/:index/move_block_down              controllers.ContestAdministration.moveBlockDown(event, contest, index:Integer)
POST        /:event/:contest/:index/remove_block                 controllers.ContestAdministration.removeBlock(event, contest, index:Integer)

#admin problems
GET         /:event/*folder/view_folder                          controllers.Problems.viewFolder(event, folder)
GET         /:event/*problem_link/view_problem                   controllers.Problems.viewProblem(event, problem_link)
GET         /:event/*pid/view_problem_raw                        controllers.Problems.viewRawProblem(event, pid)
POST        /:event/*problem_link/remove_link                    controllers.Problems.removeLink(event, problem_link)
POST        /:event/*problem_link/update_problem                 controllers.Problems.updateProblem(event, problem_link)
POST        /:event/*folder/create_problem                       controllers.Problems.createProblem(event, folder)
POST        /:event/*problem_link/edit_problem                   controllers.Problems.editProblem(event, problem_link)

#global admin
GET         /migrate                                             controllers.Application.migrate()
POST        /wymupload                                           controllers.Application.wymEditorUpload()
GET         /:index/migrate                                      controllers.Application.migrateByIndex(index:Integer)
POST        /:event/clone_event                                  controllers.EventAdministration.doClone(event)
POST        /:event/remove_event                                 controllers.EventAdministration.doRemoveEvent(event)

#trash
POST        /:event/upload_kenguru_codes                         controllers.EventAdministration.uploadKenguruSchoolCodes(event)
POST        /:event/:contest/upload_problems                     controllers.EventAdministration.uploadProblemsFile(event, contest)

#plugins
GET         /:event/:plugin/:action/$params<(.+/)?>p             controllers.Plugins.doGet(event, plugin, action, params)
POST        /:event/:plugin/:action/$params<(.+/)?>post_p        controllers.Plugins.doPost(event, plugin, action, params)

#debug
#TODO: 1) create controller intention, 2) TODO highlight. 3) Create method intention shows up even if there is no controller 4) autoimport play.mvc.Result
#TODO report. comment in the normal line is not highlighted as an error, but it does not work
GET         /:action/debug                                       controllers.Debug.debug(action)

# Map static resources from the /public folder to the /assets URL path
GET         /bebras_training/*file                               controllers.Application.returnResource(file, base="/public/bebras-training")
GET         /assets/*file                                        controllers.Assets.at(path="/public", file)
GET         /~res/*file                                          controllers.Application.returnFile(file, base="/data/_resources")

# + TODO debug submission
# + TODO load problems
# + TODO add contest
# + TODO remove contest
# + TODO add user
# + TODO registered users
# + TODO клонировать соревнования, клонировать только с клонировавшим пользователем
# + TODO make help as extra page
# + TODO распихать побольше редактируемых блоков по страницам
# + TODO режим соревнования, что оно окончилось, но к задачам уже не перейти
# + TODO Extra pages
# + TODO final rating

# TODO при загрузке bbtc задач удалять стаые или просто сделать возможность удалить все задачи соревнования (каталога)

# TODO remove user
# TODO button to invalidate all users results

# TODO max scores evaluation (several translators)
# TODO интерфейс

# TODO redirect() instead of ok() for each POST

# Тип результа

# счетчики, еще и разные для разных событий
# загрузка картинок в html блоки текста
# загрузка картинок в задачи
# реклама
# эффект перелистывания
# скачает при переключении блоков задач
# сделать дизайн задач как в старом

# 518d38200cf2fdecf5cfbf18 different Express, was 118, now 123,
# history was: 00:00|1/4|B
#              00:00|A1|C 00:00|A2|B 00:00|A3|A 00:00|A4|B 00:00|A5|A 00:00|A26|C 00:00|A27|A 00:00|A28|B 00:00|A29|C 00:00|A30|c 00:00|A51|B 00:00|A52|A 00:00|A53|C 00:00|A54|B 00:00|A55|A 00:00|A76|C 00:00|A77|B 00:00|A78|B 00:00|A79|C 00:00|A80|B 00:00|A101|A 00:00|A102|C 00:00|A103|B 00:00|A104|B 00:00|A105|A 00:00|A105|b 00:00|A126|A 00:00|A127|C 00:00|A128|B 00:00|A129|A 00:00|A130|b 00:00|A151|C 00:00|A152|C 00:00|A153|A 00:00|A154|C 00:00|A155|B 00:00|A176|C 00:00|A177|a 00:00|A178|B 00:00|A179|b 00:00|A179|. 00:00|A180|B 00:00|A201|a 00:00|A202|B 00:00|A203|b 00:00|A204|A 00:00|A205|C 00:00|A226|c 00:00|A226|B 00:00|A227|C 00:00|A228|A 00:00|A229|B 00:00|A230|b 00:00|A230|C


# 517656240cf286004fd80d19 different Hard, was 12, now -2
# history was: 00:25|1/3|B 00:38|1/4|b 01:05|1/5|B 02:02|1/1|a 02:29|2/3|C 02:54|2/4|b 03:04|2/5|a 03:15|2/2|c 03:32|2/1|a 03:44|3/3|C 04:01|3/4|b 04:14|3/5|c 04:31|3/2|B 04:49|3/1|c 05:02|4/3|A 05:18|4/4|a 05:33|4/5|a 06:01|4/2|b 06:06|4/2|c 06:17|4/1|C 06:30|5/3|a 06:39|5/4|b 06:59|5/5|b 07:14|5/2|A 07:25|5/1|a 07:35|6/3|b 07:42|6/4|a
#              00:25|B3|B 00:38|B4|b 01:05|B5|B 02:02|B1|a 02:29|B28|C 02:54|B29|b 03:04|B30|a 03:15|B27|c 03:32|B26|a 03:44|B53|C 04:01|B54|b 04:14|B55|c 04:31|B52|B 04:49|B51|c 05:02|B78|A 05:18|B79|a 05:33|B80|a 06:01|B77|b 06:06|B77|c 06:17|B76|C 06:30|B103|a 06:39|B104|b 06:59|B105|b 07:14|B102|A 07:25|B101|a 07:35|B128|b 07:42|B129|a 07:58|B130|a 08:07|B127|b 08:14|B126|c 08:31|B153|b 08:45|B154|b 08:55|B155|B 08:59|B155|a 09:09|B152|a 09:19|B151|b 09:34|B178|a 09:42|B179|A 09:56|B177|c



# 5176b8050cf286004fd80d24
# 00:09|14|B 00:20|15|A 00:26|13|A 00:33|11|C 00:45|12|B 00:52|24|C 01:10|25|B 01:18|23|B 01:39|21|C 01:47|21|a 01:58|22|A 02:12|34|c 02:18|35|A 02:25|33|C 02:36|31|B 02:42|32|A 02:51|44|C 02:57|45|B 03:10|43|B 03:29|41|C 04:09|54|B 04:19|55|A 04:43|53|B 04:58|53|c 05:08|53|B 05:18|51|A 05:37|52|a 05:43|64|A 05:48|65|A 05:54|63|B 05:58|61|A 06:02|62|C 06:14|74|C 06:24|75|B 06:43|73|A 07:04|71|C 07:13|72|C 07:47|84|a 07:57|84|C 08:06|85|B 08:29|83|a 08:52|81|C 09:27|82|B 09:37|94|b 09:47|95|C
# 00:09|A4|B 00:20|A5|A 00:26|A3|A 00:33|A1|C 00:45|A2|B 00:52|A29|C 01:10|A30|B 01:18|A28|B 01:39|A26|C 01:47|A26|a 01:58|A27|A 02:12|A54|c 02:18|A55|A 02:25|A53|C 02:36|A51|B 02:42|A52|A 02:51|A79|C 02:57|A80|B 03:10|A78|B 03:29|A76|C 04:09|A104|B 04:19|A105|A 04:43|A103|B 04:58|A103|c 05:08|A103|B 05:18|A101|A 05:37|A102|a 05:43|A129|A 05:48|A130|A 05:54|A128|B 05:58|A126|A 06:02|A127|C 06:14|A154|C 06:24|A155|B 06:43|A153|A 07:04|A151|C 07:13|A152|C 07:47|A179|a 07:57|A179|C 08:06|A180|B 08:29|A178|a 08:52|A176|C 09:27|A177|B 09:37|A204|b 09:47|A205|C 
